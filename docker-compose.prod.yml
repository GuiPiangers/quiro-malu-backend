services:
  app:
    restart: always
    container_name: app
    image: guipiangers/quiro-backend:1.0
    env_file:
      - .env
    ports: 
      - "8000:8000"
    depends_on: 
      - "mysql-db"
      - "mongo"
      - "redis"
    networks:
      - minha_rede

  mysql-db:
    image: mysql:8.0
    name: mongo
    container_name: mysqldb
    restart: always
    env_file:
      - .env
    volumes:
      - db:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - minha_rede

  mongo:
    image: mongo:8.0.4
    restart: always
    env_file:
      - .env
    volumes:
      - mongoDb:/data/db
    ports:
      - "27017:27017"
    networks:
      - minha_rede

  redis:
    image: redis:7.4.2-alpine
    container_name: redis
    restart: always
    env_file:
      - .env
    volumes:
      - redisDb:/data
    ports:
      - "6379:6379"
    networks:
      - minha_rede

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"   # Porta HTTP para o Certbot verificar o domínio
      - "443:443" # Porta HTTPS para conexões seguras
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf    # Configuração do Nginx
      - ./certbot/conf:/etc/letsencrypt             # Diretório dos certificados SSL
      - ./certbot/www:/var/www/certbot  
    depends_on: 
      - "app"
    networks:
      - minha_rede
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt             # Diretório dos certificados SSL
      - ./certbot/www:/var/www/certbot              # Pasta temporária para o Certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email eduardomartinspiangers@gmail.com -d quiromalu-server.duckdns.org --agree-tos
    networks:
      - minha_rede

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports: 
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - minha_rede

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - minha_rede


  loki:
    image: grafana/loki:2.9.1
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    networks:
      - minha_rede

  promtail:
    image: grafana/promtail:2.9.1
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log
      - ./promtail/promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command:
      -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - minha_rede

volumes:
  db:
  loki_data:
  mongoDb:
  redisDb:
networks:
  minha_rede:
    driver: bridge
